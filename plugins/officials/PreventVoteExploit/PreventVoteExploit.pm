package PreventVoteExploit;

use strict;

use SpadsPluginApi;

no warnings 'redefine';

my $pluginVersion='0.1';
my $requiredSpadsVersion='0.11.10';

sub getVersion { return $pluginVersion; }
sub getRequiredSpadsVersion { return $requiredSpadsVersion; }

sub new {
  my $class=shift;
  my $self = {};
  bless($self,$class);
  slog("Plugin loaded (version $pluginVersion)",3);
  return $self;
}

sub onVoteRequest {
  my ($source,$user,$p_remainingVoters)=($_[1],$_[2],$_[4]);
  my $lobby=getLobbyInterface();
  my %ipAddresses;
  foreach my $player ($user,keys %{$p_remainingVoters}) {
    next unless($lobby->{users}->{$player}->{status}->{rank} > 0 && defined $lobby->{users}->{$player}->{ip});
    my $ipAddr=$lobby->{users}->{$player}->{ip};
    $ipAddresses{$ipAddr}=[] unless(exists $ipAddresses{$ipAddr});
    push(@{$ipAddresses{$ipAddr}},$player);
  }
  if($lobby->{users}->{$user}->{status}->{rank} == 0 && defined $lobby->{users}->{$user}->{ip}) {
    my $ipAddr=$lobby->{users}->{$user}->{ip};
    if(exists $ipAddresses{$ipAddr}) {
      my @allowedPlayers=@{$ipAddresses{$ipAddr}};
      slog("Denying vote call for player $user (sharing same IP address as player".($#allowedPlayers > 0 ? 's ' : ' ').(join(',',@allowedPlayers)).')',3);
      if($source eq 'pv') {
        sayPrivate($user,'You are not allowed to call a vote (vote exploit protection)');
      }else{
        sayBattleAndGame("Denying vote call for player $user (vote exploit protection)");
      }
      return 0;
    }
  }
  my %playersToRemove;
  foreach my $player (keys %{$p_remainingVoters}) {
    next unless($lobby->{users}->{$player}->{status}->{rank} == 0 && defined $lobby->{users}->{$player}->{ip});
    my $ipAddr=$lobby->{users}->{$player}->{ip};
    if(exists $ipAddresses{$ipAddr}) {
      $playersToRemove{$ipAddr}=[] unless(exists $playersToRemove{$ipAddr});
      push(@{$playersToRemove{$ipAddr}},$player);
    }else{
      $ipAddresses{$ipAddr}=[$player];
    }
  }
  foreach my $ipAddr (keys %playersToRemove) {
    my @removedPlayers=@{$playersToRemove{$ipAddr}};
    my @allowedPlayers=@{$ipAddresses{$ipAddr}};
    slog('Denying vote for player'.($#removedPlayers > 0 ? 's ' : ' ').(join(',',@removedPlayers)).' (sharing same IP address as player'.($#allowedPlayers > 0 ? 's ' : ' ').(join(',',@allowedPlayers)).')',3);
    delete @{$p_remainingVoters}{@removedPlayers};
  }
  return 1;
}

1;
